char * simplifyPath(char * path){
    char newPath[1000] = {};
    char* stack[strlen(path)];
    char* saveptr;
    int top = -1;
    //fill stack with tokens from path
    char* token = strtok_r(path, "/", &saveptr);

    while(token != NULL){
        if(strcmp(token, "..") == 0){
            if(top > -1){
            top--; //pop last element off 
            }
        }
        else if(strcmp(token, ".") == 0){
            //ignore this case as . does nothing
        }
        else{
            //current token is an actual element
            //so push it to the stack
            stack[++top] = token;
        }
        //get next token
        token = strtok_r(NULL, "/", &saveptr);
    }
    
    //create string out of stack.
    newPath[0] = '/';
    for(int i=0; i<=top; ++i ){
        strcat(newPath, stack[i]);
        
        if(i!=top){
        strcat(newPath, "/");
        }
        else{
            strcat(newPath, "\0");
        }
    }
    //convert newPath to a char*
    char* result = (char*)malloc(strlen(newPath)  * sizeof(char) +1);
    strcpy(result, newPath);
     printf("result is: %s\n", result);
    return result;
}
